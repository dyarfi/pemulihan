<?php defined('SYSPATH') or die('No direct script access.');class Controller_Search extends Controller_Themes_Default {    protected $search;    protected $id1;	protected $id2;	protected $id3;	protected $id4;	    public function before() {        parent::before();		$this->search	= new Model_Search;		// Get Requested Parameters        $this->id1 = Request::$current->param('id1');        $this->id2 = Request::$current->param('id2');        $this->id3 = Request::$current->param('id3');        $this->id4 = Request::$current->param('id4');		//$this->perpage   = Lib::config('site.item_per_page'); 		$this->perpage   = 10;     }	    public function action_index() {       $page = ($this->id1 == '') ? null : $this->id1;	   //print_r( $this->request->post() ); exit();       if ($_POST) {			$post = new Validation($_POST);			$post->rule('search', 'regex', array(':value', '/^[0-9a-z_.\s\-]++$/iD'));			$keyword = '';			if ($post->check()) {				$keyword	= Kohana::sanitize($post['search']);			} else {				$keyword	= Kohana::sanitize($keyword);			}			$this->request->redirect(URL::site('search/'.$keyword));		} 		$keyword     = empty($this->id1) ? 'no_search' : $this->id1;		/* DATABASE SEARCH */		// Table Article Category		$sql1		= "SELECT * FROM `tbl_article_category` "						."WHERE MATCH (name,title,description) "						."AGAINST ('".$keyword."*' IN BOOLEAN MODE) "						."AND status ='publish';";		$db_result1  = $this->search->manual_query($sql1);        // Table Article 		$sql2		 = "SELECT * FROM `tbl_article` "						."WHERE MATCH (name,subject,synopsis,text) "						."AGAINST ('".$keyword."*' IN BOOLEAN MODE) "						."AND status ='publish';";		$db_result2  = $this->search->manual_query($sql2);		// Table Page		$sql3		 = "SELECT * FROM `tbl_page` "					  ."WHERE MATCH (name,subject,synopsis,text) "					  ."AGAINST ('".$keyword."*' IN BOOLEAN MODE) "					  ."AND status ='publish';";		$db_result3  = $this->search->manual_query($sql3);		// Define temp data		$search_var = array();		$i = 0;		$url_base = URL::base();		// Article Category data set		foreach($db_result1 as $result1) {				$return = Lib::to_object($result1);				if(!empty($return)) {				$search_var[$i]['url'] = $url_base . 'articles/' . $return->name; 				$search_var[$i]['content'] = Text::limit_words(strip_tags(trim($return->description,"\x00..\x1F")), 66,'...');					}			$i++;		}		unset($return);		// Article data set		$return = array();		foreach($db_result2 as $result2) {				$return = Lib::to_object($result2);				if(!empty($return)) {				$search_var[$i]['url'] = $url_base . 'articles/read/' . $return->name; 				$search_var[$i]['content'] = Text::limit_words(strip_tags(trim($return->text,"\x00..\x1F")), 66,'...');					}			$i++;		}		unset($return);		// Page data set		$return = array();		foreach($db_result3 as $result3) {				$return = Lib::to_object($result3);				if(!empty($return)) {				$category = array();				if ($category = Model_PageCategory::instance()->load($return->category_id)) {					if($category->status == 'publish' && $category->name == 'about') {						$search_var[$i]['url'] = $url_base . $category->name . '/read/' . $return->name; 						$search_var[$i]['content'] = Text::limit_words(strip_tags(trim($return->text,"\x00..\x1F")), 66,'...');					}				}			}			$i++;		}		unset($return);		//print_r($search_var); exit();		//print_r($i); exit();		/* DATABASE SEARCH */		 $search_data = $search_var;		/* Here We Set Our Paging */        		$html = '';		if (!empty($search_data)) {			$total_rows      = count($search_data);			$pagination = Pagination::factory(array(					'total_items' 		=> $total_rows,					'items_per_page' 	=> $this->perpage,					'view'              => 'pagination/default'				)			);			$active_page    = empty($_GET['page']) ? 1 : $_GET['page']; 			$start_arr      = ($active_page-1)*$this->perpage;			$top_limit      = $this->perpage > $total_rows ? $total_rows : $this->perpage;			$end_arr        = ($active_page*$top_limit)-1;			$config['offset'] = $pagination->offset;        			$html       .= ''; 			//$prehtml	.= '<h2 style="color:#ed1c24;"> ' ? __('search') : __('search').'<div class="ls10"></div><span style="color:#ed1c24;font-size:12px;">Keyword : "'.$keyword.'"</span><br /><br />';			//$prehtml    .= '<div class="ls10"></div>';			//$html   .= $prehtml;			$html   .= '<ul class="search_ul">';			for ($index=$start_arr;$index<=$end_arr;$index++):				if (!empty($search_data[$index]['url'])):					$html .= '<li>';						$html .= '<a href="'.$search_data[$index]['url'].'">'.TEXT::limit_words(ucfirst(strip_tags(@$search_data[$index]['content'])),75,'').'</a>';					$html .= '</li>';				endif;			endfor;			$html   .= '</ul>';			$html   .= '<div class="ls20"></div>';			$html   .= $pagination->render();                		} else {			$html   .= '<div class="search_ul">'.I18n::get('search_empty').'</div>';		}        $content_vars        = array('data_search'=>$html,                                      'cek_empty_search'=>$search_data,                                      );		$content			= View::factory('site/search_detail_page');		foreach ($content_vars as $var => $val) {			$content->$var	= $val;		}		//print_r($keyword);		//print_r(Request::$current->param('id1'));		$this->template->page_title		= 'Search | ' . Lib::config('site.title');		$this->template->content		= $content;     }} // End Search