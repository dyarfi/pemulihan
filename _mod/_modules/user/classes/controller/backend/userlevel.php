<?php defined('SYSPATH') OR die('No direct access allowed.');class Controller_Backend_UserLevel extends Controller_Backend_BaseAdmin {	protected $_class_name;	protected $_search_keys;		public function before () {		parent::before();		$this->session		= Session::instance();		$this->now      	= time();        $this->id1 = Request::$current->param('id1');        $this->id2 = Request::$current->param('id2');        $this->id3 = Request::$current->param('id3');		$this->id4 = Request::$current->param('id4');		$this->_module_name		= Request::$current->controller();		$this->_class_name		= strtolower(str_replace('Controller_Backend_', '', get_class($this)));		$this->_module_menu		= $this->acl->module_menu;		$this->_search_keys	= array('name'		=> 'Name',									'status'	=> 'Status');		$this->_module_name	= 'userlevel';		$level				= new Model_UserLevel;		$this->level		= new Model_UserLevel;		$where_cond			= array('id >='		=> $this->session->get('level_id'));		$this->levels		= $level->find($where_cond);		$this->statuses		= array('enable',									'disable');		unset($level);	}		public function action_index () {		/*		$where_cond	= array('id >='		=> $this->session->get('level_id'),							'status !='	=> 'deleted');		*/		$where_cond	= array('id >='		=> $this->session->get('level_id'),							'status !='	=> 'deleted');									/** Find & Multiple change status **/		if ($_POST) {			$post	= new Validation($_POST);			if (isset($_POST['field']) || isset($_POST['keyword'])) {				$post->rule('field', array($this, '_valid_search_key'), array(':validation', 'field'));				if ($post->check()) {					$where_cond[$_POST['field'] . ' LIKE']	= $_POST['keyword'] . '%';					$filters	= array('f'	=> $_POST['field'],										'q'	=> $_POST['keyword']);					$this->session->set($this->_class_name.'_filter', serialize($filters));				} else if (isset($_POST['find'])) {					$this->session->delete($this->_class_name.'_filter');				}			}			if ($this->session->get($this->_class_name.'_filter') !== FALSE) {				$filters	= unserialize($this->session->get($this->_class_name.'_filter'));				if (in_array($filters['f'], array_keys($this->_search_keys)) && $filters['q'] != '')					$where_cond[$filters['f'] . ' LIKE']	= '%' . $filters['q'] . '%';			}		}		/** Table sorting **/		$params		= Request::$current->param();		$sorts		= array('asc', 'desc');		$sort		= isset($params['id2']) ? $this->id2 : 'name';		$order		= isset($params['id4']) ? $this->id4 : $sorts[0];		$order_by	= array($sort 	=> $order);		$page_index	= isset($params['page']) ? $params['page'] - 1: 0;		$per_page	= Lib::config('site.item_per_page');		$page_url	= '';		$base_url	= 'admin-cp/'.$this->_class_name.'/index/page/';		$offset		= ($page_index == 0) ? '' : $page_index * $per_page;		$table_headers	= array('name'				=> 'Name',								'backend_access'	=> 'Backend',								'status'			=> 'Status',								'added'				=> 'Added',								'modified'			=> 'Modified');		if (isset($params['sort']) && isset($params['order'])) {			$headers	= array_keys($table_headers);			$sort		= (isset($params['sort']) && in_array(strtolower($params['sort']), $headers)) ? strtolower($params['sort']) : $headers[0];			$order		= (isset($params['order']) && in_array(strtolower($params['order']), $sorts)) ? strtolower($params['order']) : $sorts[0];			$order_by	= array($sort	=> $order);			$base_url	= 'admin-cp/'.$this->_class_name.'/index/sort/' . $params['sort'] . '/order/' . $params['order'] . '/page/';		}		/** Execute list query **/		$field		= isset($filters['f']) ? $filters['f'] : '';		$keyword	= isset($filters['q']) ? $filters['q'] : '';		$where_cond	= isset($where_cond) ? $where_cond : '';		$total_rows		= $this->level->find_count($where_cond);		$total_record	= $total_rows;		$listings		= $this->level->find($where_cond, $order_by, $per_page, $offset);		$config		= array('base_url'			=> $base_url,							'total_items'		=> $total_rows,							'items_per_page'	=> $per_page,							'uri_segment'		=> 'page');		$pagination	= new Pagination($config);		/** Views **/		$content_vars		= array('listings'		=> $listings,									'table_headers'	=> $table_headers,									'statuses'		=> $this->statuses,									'search_keys'	=> $this->_search_keys,									'module_name'	=> $this->_module_name,									'module_menu'	=> $this->_module_menu,									'field'			=> $field,									'keyword'		=> $keyword,									'order'			=> $order,									'sort'			=> $sort,									'page_url'		=> $page_url,									'page_index'	=> $page_index,									'params'		=> $params,									'total_record'	=> $total_record,									'pagination'	=> $pagination);		$content			= View::factory('user/backend/'.$this->_module_name.'_index');		foreach ($content_vars as $var => $val) {			$content->$var	= $val;		}		$this->template->content		= $content; 	}		public function action_add () {		$fields	= array('name'				=> '',						'backend_access'	=> '',                        'full_backend_access'   =>'',						'status'			=> '');		$errors	= $fields;		if ($_POST) {			$post	= new Validation($_POST);			if ($post->check()) {				$fields	= $post->as_array();				$params	= array('name'				=> $fields['name'],								'backend_access'	=> (isset($fields['backend_access'])) ? 1 : 0,                                'full_backend_access'	=> (isset($fields['full_backend_access'])) ? 1 : 0,								'status'			=> $fields['status']);				$id		= $this->level->add($params);				if (isset($fields['add_another'])) {					$this->request->redirect('admin-cp/'.$this->_class_name.'/add');					return;				}				$this->request->redirect('admin-cp/'.$this->_class_name.'/view/'.$id);				return;			} else {				$fields		= Arr::overwrite($fields, $post->as_array());				$errors 	= Arr::overwrite($errors, $post->errors());				$buffers	= $errors;				foreach ($errors as $row_key => $row_val) {					if ($row_val != '')						$buffers[$row_key]	= Lib::config('admin.error_field_open').Kohana::lang('validation.'.$errors[$row_key]).Lib::config('admin.error_field_close');					else						$buffers[$row_key]	= $row_val;				}				$errors		= $buffers;			}		}		/** Views **/		$content_vars		= array('errors'	=> $errors,									'fields'	=> $fields,									'levels'		=> $this->levels,									'statuses'	  	=> $this->statuses,									'module_name' 	=> $this->_module_name,									'module_menu'	=> $this->_module_menu);		$content			= View::factory('user/backend/'.$this->_module_name.'_add');		foreach ($content_vars as $var => $val) {			$content->$var	= $val;		}		$this->template->content		= $content;	}		public function action_view () {		$this->level->id	= $this->id1;		if (!$this->level->load()) {			$this->request->redirect('admin-cp/'.$this->_module_name.'/index');			return;		}		/** Views **/		$content_vars		= array('levels'		=> $this->level,									'module_name'	=> $this->_module_name,									'module_menu'	=> $this->_module_menu,);		$content			= View::factory('user/backend/'.$this->_module_name.'_view');		foreach ($content_vars as $var => $val) {			$content->$var	= $val;		}		$this->template->content		= $content; 	}		public function action_edit () {		$this->level->id	= $this->id1;		if (!$this->level->load()) {			$this->request->redirect('admin-cp/'.$this->_class_name.'/index');			return;		}		$fields	= array('name'				=> '',						'backend_access'	=> '',                        'full_backend_access'   => '',						'status'			=> '');		$errors	= $fields;		if ($_POST) {			$post	= new Validation($_POST);			if ($post->check()) {				$fields	= $post->as_array();				$params	= array('name'				=> $fields['name'],								'backend_access'	=> (isset($fields['backend_access'])) ? 1 : 0,                                'full_backend_access' => (isset($fields['full_backend_access'])) ? 1 : 0,								'status'			=> $fields['status']);				foreach ($params as $var => $val) {					$this->level->$var	= $val;				}				$this->level->update();				if (isset($fields['add_another'])) {					$this->request->redirect('admin-cp/'.$this->_class_name.'/add');					return;				}				$this->request->redirect('admin-cp/'.$this->_class_name.'/view/'.$this->id1);				return;			} else {				$fields		= arr::overwrite($fields, $post->as_array());				$errors 	= arr::overwrite($errors, $post->errors());				$buffers	= $errors;				foreach ($errors as $row_key => $row_val) {					if ($row_val != '')						$buffers[$row_key]	= Lib::config('admin.error_field_open').Kohana::lang('validation.'.$errors[$row_key]).Lib::config('admin.error_field_close');					else						$buffers[$row_key]	= $row_val;				}				$errors		= $buffers;			}		} else {			$fields	= array('name'				=> $this->level->name,							'backend_access'	=> $this->level->backend_access,                            'full_backend_access'   => $this->level->full_backend_access,							'status'			=> $this->level->status);		}		/** Views **/		$content_vars		= array('errors'	=> $errors,									'fields'	=> $fields,									'level'		=> $this->level,									'statuses'	=> $this->statuses,									'module_name' => $this->_module_name,									 'module_menu' => $this->_module_menu);		$content			= View::factory('user/backend/'.$this->_module_name.'_edit');		foreach ($content_vars as $var => $val) {			$content->$var	= $val;		}		$this->template->content		= $content; 	}		public function action_delete () {		$this->level->id	= $this->id1;		if (!$this->level->load()) {			echo 0;		}		$this->level->status	= 'deleted';		if($this->level->update())			echo 1;		else			echo 0;//		$redirect_url	= ($this->acl->previous_url != '') ? $this->acl->previous_url : 'admin-cp/'.$this->_class_name.'/index';////		$this->request->redirect($redirect_url);		exit();	}		/*** Function Access ***/	// Action for update item status	public function action_change() {			if ($this->request->post('check') !='') {			$rows	= $this->request->post('check');			foreach ($rows as $row) {				$this->level->id	= $row;				if (!$this->level->load())					continue;				$this->level->status	= $this->request->post('select_action');				$this->level->update();			}			$redirect_url	= (strstr($this->acl->previous_url,'admin-cp')) ? $this->acl->previous_url : 'admin-cp/'.$this->_class_name.'/index';			$this->request->redirect($redirect_url);		} else {				$this->request->redirect('admin-cp/'.$this->_class_name);					}	}		public function _valid_search_key (Validation $array, $field) {		if (!isset($this->_search_keys)) {			$array->add_error($field, 'invalid_search_key');			return;		}		$keys			= array_keys($this->_search_keys);		if (!in_array($array[$field], $keys))			$array->add_error($field, 'invalid_search_key');	}}